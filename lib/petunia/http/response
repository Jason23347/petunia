#!/bin/bash

[ -v _MODULE_RESPONSE_ ] &&
    return 0 || _MODULE_RESPONSE_=

declare -A _RESPONSE_STATUS
_RESPONSE_STATUS=200

declare -A _RESPONSE_HEADERS
_RESPONSE_HEADERS['Content-type']='text/html'

declare -A _RESPONSE_COOKIES

declare -A _RESPONSE_VARIABLES

Response::setStatus() {
    [ $# -eq 0 ] && return 1
    _RESPONSE_STATUS="$1"
    return 0
}

# key=$1 value=$2 Path=$3 domain=$4
Response::setCookie() {
    [ $# -lt 2 ] && return 1
    local tmp="${2};path=${3:-/}"
    [ -v $4 ] && tmp+=";domain=$4"
    _RESPONSE_COOKIES[$1]=$tmp
}

Response::headers() {
    printf "Status: %s\n" "$_RESPONSE_STATUS"

    # headers
    for index in ${!_RESPONSE_HEADERS[@]}; do
        echo "${index}: ${_RESPONSE_HEADERS[$index]}"
    done

    # cookies
    for index in ${!_RESPONSE_COOKIES[@]}; do
        echo "Set-Cookie: ${index}=${_RESPONSE_COOKIES[$index]}"
    done

    printf "\n"
    return 0
}

view.set() {
    [ $# -ne 2 ] && return 1
    _RESPONSE_VARIABLES["$1"]="$2"
    return 0
}

view.render() {
    local str=
    local value=
    for key in ${!_RESPONSE_VARIABLES[@]}; do
        value=${_RESPONSE_VARIABLES[$key]}
        str+="| sed \"s/{{ $key }}/$value/g\""
    done

    eval cat $__DIR__/app/views/$1.html $str
}