#!/bin/bash

[ -v _MODULE_ROUTER_ ] &&
    return 0 || _MODULE_ROUTER_=

ROUTE_DIR=$__DIR__/storage/petunia/routes

. $__DIR__/lib/petunia/http/request
. $__DIR__/lib/petunia/http/response

URI.unescape() {
    local str=$1
    str=$(echo $str | sed 's/+/ /g' | sed 's/%/\\x/g')
    printf $str
}

router::define() {
    [ -v $_ROUTE_MATCHED ] || return 0

    unset method
    typeset -u method=$1
    local path=$2
    local action=$3

    _URI_PARAMS=$(echo $path | awk -F '/:' '{
        for(i = 1; i <= NF; i++) {
            print $i
        }
    }' | sed 's/\/.*//g' | sed '/^$/d')
    _URI_PARAMS=($_URI_PARAMS)

    path=$(echo $path | sed 's/:\w\+/(.*)/g')

    echo $method | grep "$REQUEST_METHOD" >/dev/null &&
        [[ "$REQUEST_URI" =~ "^$path$" ]] || return 1

    local -i i
    for ((i = 1; i < ${#BASH_REMATCH[@]}; i++)); do
        eval ${_URI_PARAMS[i - 1]}=$(URI.unescape "${BASH_REMATCH[i]}" |
            tr -d '`$')
    done

    _ROUTE_MATCHED=true
    _ROUTE_ACTION=${action//./\/}
    return 0
}

router::handle() {
    # redirect stdout
    exec 5>&1

    # redirect stdout to tmp file
    mkdir -p /tmp/petunia/$APP_NAME
    cd /tmp/petunia/$APP_NAME
    tmp_file=$(md5sum <<<$(date +%s))
    tmp_file=/tmp/petunia/$APP_NAME/${tmp_file% -}
    exec 1>>$tmp_file

    # handle uri
    . $__DIR__/route/config

    if [ -v $_ROUTE_MATCHED ]; then
        Response::setStatus 404
        # TODO: cat err/404.html
        echo "Page not found."

        route::clean
        return 0
    fi

    # handle controller

    local controller=${_ROUTE_ACTION%/*}
    . $__DIR__/app/controller/$controller
    ${_ROUTE_ACTION##*/}

    route::clean
    return 0
}

route::clean() {
    exec 1>&5
    Response::headers
    cat $tmp_file
    rm $tmp_file
}
